{"version":3,"sources":["../app.js"],"names":["express","require","app","http","Server","socket_io","path","session","logger","bodyParser","passport","mongoose","port","process","env","PORT","io","navbar","Link","Text","Promise","global","connect","useMongoClient","connectStatus","connection","once","console","log","set","join","__dirname","use","json","urlencoded","extended","static","sessionOption","secret","resave","saveUninitialized","cookie","get","secure","noteRoutes","cardRoutes","discussRoutes","authRoutes","workTimeRoutes","req","res","next","err","Error","status","listen","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["var express = require('express'),\n    app = express(),\n    http = require('http').Server(app),\n    socket_io = require('socket.io'),\n    path = require('path'),\n    session = require('express-session'),\n    logger = require('morgan'),\n    bodyParser = require('body-parser'),\n    passport = require('passport'),\n    mongoose = require('mongoose');\n\nvar port = process.env.PORT || 5000;\nvar io = socket_io(http);\napp.io = io;\n\nvar navbar = [\n    {Link: '/', Text: 'Home'},\n    {Link: '/newnote', Text: 'New note'},\n    {Link: '/discuss', Text: 'Discuss'},\n    {Link: '/auth', Text: 'Sign In'},\n    {Link: '/auth/logout', Text: 'Sign Out'},\n    {Link: '/workTimeTable', Text: 'Time Table'},\n];\n\n// Mongoose ODM...\nmongoose.Promise = global.Promise;\nvar mongoose = require('mongoose');\n\n// Connect to MongoDB...\nmongoose.connect('mongodb://kacper:kacper@ds155192.mlab.com:55192/standupdb', {\n    useMongoClient: true});\n\n// Logs that we connected to MongoDb\nvar connectStatus = mongoose.connection;\nconnectStatus.once('open', function () {\n    console.log('Connected to Mongodb');\n});\n\n// view engine setup\napp.set('views', path.join(__dirname, '/src/views'));\napp.set('view engine', 'ejs');\n\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(express.static(path.join(__dirname, 'public')));\n\n\nvar sessionOption = {\n    secret: 'standupApp',\n    resave: false,\n    saveUninitialized: false,\n    cookie: {}\n};\n\nif (app.get('env') === 'production') {\n    app.set('trust proxy', 1);\n    sessionOption.cookie.secure = true;\n}\napp.use(session(sessionOption));\n\nrequire('./src/services/passport/passport.service')(app);\n\nvar noteRoutes = require('./src/routes/noteRoutes')(navbar);\nvar cardRoutes = require('./src/routes/cardRoutes')(navbar);\nvar discussRoutes = require('./src/routes/discussRoutes')(io, navbar);\nvar authRoutes = require('./src/routes/authRoutes')(navbar);\nvar workTimeRoutes = require('./src/routes/timeTableRoutes')(navbar);\n\napp.use('/', cardRoutes);\napp.use('/newnote', noteRoutes);\napp.use('/discuss', discussRoutes);\napp.use('/auth', authRoutes);\napp.use('/workTimeTable', workTimeRoutes);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\nhttp.listen(port, function(){\n    console.log(`Server listening on port ${port}!`);\n\n});\n\n\nmodule.exports = app;\n"]}