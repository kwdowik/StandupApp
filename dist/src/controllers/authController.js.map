{"version":3,"sources":["../../../src/controllers/authController.js"],"names":["mongodb","require","MongoClient","authController","nav","getLoginPage","req","res","render","title","message","query","error","undefined","userName","user","username","tryToSignIn","redirect","checkAuthentication","next","console","log","signIn","signOut","logout","getRegisterPage","register","connect","err","db","collection","body","password","insert","results","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,EAAmBC,WAAjC;;AAEA,IAAIC,iBAAiB,SAAjBA,cAAiB,CAAUC,GAAV,EAAe;;AAEhC,QAAIC,eAAe,SAAfA,YAAe,CAAUC,GAAV,EAAeC,GAAf,EAAoB;AACnCA,YAAIC,MAAJ,CAAW,OAAX,EAAoB;AAChBC,mBAAO,YADS;AAEhBL,iBAAKA,GAFW;AAGhBM,qBAASJ,IAAIK,KAAJ,CAAUC,KAAV,GAAkB,+BAAlB,GAAoDC,SAH7C;AAIhBC,sBAAUR,IAAIS,IAAJ,KAAaF,SAAb,GAAyBA,SAAzB,GAAqCP,IAAIS,IAAJ,CAASC;AAJxC,SAApB;AAMH,KAPD;;AASA,QAAIC,cAAc,SAAdA,WAAc,CAAUX,GAAV,EAAeC,GAAf,EAAoB;AAClCA,YAAIW,QAAJ,CAAa,eAAb;AACH,KAFD;;AAIA,QAAIC,sBAAsB,SAAtBA,mBAAsB,CAAUb,GAAV,EAAeC,GAAf,EAAoBa,IAApB,EAA0B;AAChDC,gBAAQC,GAAR,wBAAiChB,IAAIS,IAAJ,CAASC,QAA1C;AACA,YAAG,CAACV,IAAIS,IAAR,EAAc;AACVR,gBAAIW,QAAJ,CAAa,OAAb;AACH;AACDE;AACH,KAND;;AAQA,QAAIG,SAAS,SAATA,MAAS,CAAUjB,GAAV,EAAeC,GAAf,EAAoB;AAC7B,YAAIG,UAAU,0BAAd;AACAH,YAAIW,QAAJ,CAAa,eAAeR,OAA5B;AACH,KAHD;;AAKA,QAAIc,UAAU,SAAVA,OAAU,CAAUlB,GAAV,EAAeC,GAAf,EAAoB;AAChCD,YAAImB,MAAJ;AACA,YAAIf,UAAU,2BAAd;AACAH,YAAIW,QAAJ,CAAa,eAAeR,OAA5B;AACD,KAJD;;AAMA,QAAIgB,kBAAkB,SAAlBA,eAAkB,CAAUpB,GAAV,EAAeC,GAAf,EAAoB;AACtCA,YAAIC,MAAJ,CAAW,UAAX,EAAuB;AACnBC,mBAAO,eADY;AAEnBL,iBAAKA;AAFc,SAAvB;AAIH,KALD;;AAOA,QAAIuB,WAAW,SAAXA,QAAW,CAAUrB,GAAV,EAAeC,GAAf,EAAoB;AAC/BP,gBAAQ4B,OAAR,CAAgB,+BAAhB,EAAiD,UAAUC,GAAV,EAAeC,EAAf,EAAmB;AAChE,gBAAIC,aAAaD,GAAGC,UAAH,CAAc,OAAd,CAAjB;AACA,gBAAIhB,OAAO;AACPC,0BAAUV,IAAI0B,IAAJ,CAASlB,QADZ;AAEPmB,0BAAU3B,IAAI0B,IAAJ,CAASC;AAFZ,aAAX;;AAKAF,uBAAWG,MAAX,CAAkBnB,IAAlB,EAAwB,UAAUc,GAAV,EAAeM,OAAf,EAAwB;AAC5C,oBAAIzB,qBAAmBK,KAAKC,QAAxB,4BAAJ;AACA,oBAAGa,GAAH,EAAQ;AACJnB,8BAAUmB,GAAV;AACH;AACDtB,oBAAIW,QAAJ,CAAa,eAAeR,OAA5B;AACH,aAND;AAOH,SAdD;AAeH,KAhBD;;AAmBA,WAAO;AACHL,sBAAcA,YADX;AAEHY,qBAAaA,WAFV;AAGHM,gBAAQA,MAHL;AAIHC,iBAASA,OAJN;AAKHL,6BAAqBA,mBALlB;AAMHO,yBAAiBA,eANd;AAOHC,kBAAUA;AAPP,KAAP;AAUH,CAtED;;AAwEAS,OAAOC,OAAP,GAAiBlC,cAAjB","file":"authController.js","sourcesContent":["var mongodb = require('mongodb').MongoClient;\n\nvar authController = function (nav) {\n\n    var getLoginPage = function (req, res) {\n        res.render('login', {\n            title: 'Login Page',\n            nav: nav,\n            message: req.query.error ? 'Invalid username or password.' : undefined,\n            userName: req.user === undefined ? undefined : req.user.username\n        });\n    };\n\n    var tryToSignIn = function (req, res) {\n        res.redirect('/auth/profile');\n    };\n\n    var checkAuthentication = function (req, res, next) {\n        console.log(`check auth, user: ${req.user.username}`);\n        if(!req.user) {\n            res.redirect('/auth');\n        }\n        next();\n    };\n    \n    var signIn = function (req, res) {\n        var message = 'User successful sign in.';\n        res.redirect('/?message=' + message);\n    };\n\n    var signOut = function (req, res) {\n      req.logout();\n      var message = 'User successful sign out.';\n      res.redirect('/?message=' + message);\n    };\n\n    var getRegisterPage = function (req, res) {\n        res.render('register', {\n            title: 'Register Page',\n            nav: nav\n        });\n    };\n\n    var register = function (req, res) {\n        mongodb.connect('mongodb://localhost/standupdb', function (err, db) {\n            var collection = db.collection('users');\n            var user = {\n                username: req.body.userName,\n                password: req.body.password\n            };\n            \n            collection.insert(user, function (err, results) {\n                var message = `User: ${user.username} successful registered.`;\n                if(err) {\n                    message = err;\n                }\n                res.redirect('/?message=' + message);\n            });\n        });\n    };\n\n\n    return {\n        getLoginPage: getLoginPage,\n        tryToSignIn: tryToSignIn,\n        signIn: signIn,\n        signOut: signOut,\n        checkAuthentication: checkAuthentication,\n        getRegisterPage: getRegisterPage,\n        register: register\n    };\n\n};\n\nmodule.exports = authController;"]}