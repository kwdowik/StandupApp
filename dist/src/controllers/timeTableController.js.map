{"version":3,"sources":["../../../src/controllers/timeTableController.js"],"names":["WorkTime","require","dbService","mongodb","MongoClient","workTimeTableController","nav","getYourTimeTable","req","res","console","log","user","username","render","title","userName","message","getTimeTableMenu","getUsers","then","users","undefined","getTeammateTimeTable","body","teammateName","teammate","createTimeTable","item","workStart","workEnd","newWorkTimeItem","createSchedule","save","err","errMsg","updateTimeTable","findOneAndUpdate","id","start","end","workTimeItem","error","deleteTimeTable","findOneAndRemove","data","memberName","getEvents","query","find","startTime","endTime","$and","$gte","$lte","exec","workTimeItems","send","module","exports"],"mappings":"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","file":"timeTableController.js","sourcesContent":["var WorkTime = require('../models/workTimeTableModel');\nvar dbService = require('../services/dbService')();\nvar mongodb = require('mongodb').MongoClient;\n\n\nvar workTimeTableController = function (nav) {\n\n    var getYourTimeTable = function (req, res) {\n        console.log(`UserName: ${req.user.username}`);\n        res.render('yourTimeTable',\n            {\n                title: 'Your Work Time Table',\n                userName: req.user.username,\n                nav: nav,\n                message: ''\n            });\n    };\n\n    var getTimeTableMenu = function (req, res) {\n        dbService.getUsers().then(function (users) {\n            res.render('timeTableMenu',\n                {\n                    title: 'Time Table Menu',\n                    userName: req.user == undefined ? undefined : req.user.username,\n                    nav: nav,\n                    message: '',\n                    users: users\n                });\n        });\n    };\n    \n    var getTeammateTimeTable = function (req, res) {\n        console.log(`Selected Teammate: ${req.body.teammateName}`);\n        res.render('teammatesTimeTable',\n            {\n                title: `${req.body.teammateName}'s Work Time Table`,\n                userName: undefined,\n                teammate: req.body.teammateName,\n                nav: nav,\n                message: ''\n            });\n    };\n\n    var createTimeTable = function (req, res) {\n        var item = req.body;\n        item.user = req.user.username;\n            console.log(`memberName: ${req.user.username}`);\n            console.log(`title: ${item.title}`);\n            console.log(`start: ${item.workStart}`);\n            console.log(`end: ${item.workEnd}`);\n\n            var newWorkTimeItem = createSchedule(item);\n            newWorkTimeItem.save(function (err) {\n                if(err) {\n                    var errMsg = `Sorry there were an error saving the stand-up hour time. + ${err}`;\n                    res.render('yourTimeTable',\n                        {\n                            title: 'Work Time Table',\n                            userName: req.user.username,\n                            nav: nav,\n                            message: errMsg\n                        });\n                }\n            });\n    };\n\n    var updateTimeTable = function (req, res) {\n        WorkTime.findOneAndUpdate({id: req.body.id }, { start: req.body.workStart, end: req.body.workEnd },\n            function (err, workTimeItem) {\n                if(err) console.error(`Err: ${err}`);\n                console.log(`Event ${req.body.title} updated successfully`);\n            });\n    };\n\n    var deleteTimeTable = function (req, res) {\n        console.log(`ID: ${req.body.id}`);\n        WorkTime.findOneAndRemove({id: req.body.id }, function (err) {\n            if(err) console.error(`Err: ${err}`);\n            console.log(`Event delete successfully`);\n        });\n    };\n\n    function createSchedule(data) {\n        return new WorkTime({\n            id: data.id,\n            memberName: data.user,\n            title: data.title,\n            start: data.workStart,\n            end: data.workEnd\n        });\n    }\n\n    var getEvents = function(req, res) {\n        var query = WorkTime.find();\n        var startTime = req.query.start;\n        var endTime = req.query.end;\n        var memberName = req.user == undefined ? req.query.username : req.user.username;\n        console.log(`User: ${memberName}`);\n        query.find({$and: [{memberName: memberName ,start: {$gte: startTime}, end: {$lte: endTime}}]})\n            .exec(function (err, workTimeItems) {\n                if(err) {\n                    console.error(`Error: ${err}`);\n                }\n                console.log(`Results: ${workTimeItems}`);\n                res.send(workTimeItems);\n            });\n    };\n\n    return {\n        getYourTimeTable: getYourTimeTable,\n        getTimeTableMenu: getTimeTableMenu,\n        getTeammateTimeTable: getTeammateTimeTable,\n        createTimeTable: createTimeTable,\n        updateTimeTable: updateTimeTable,\n        deleteTimeTable: deleteTimeTable,\n        getEvents: getEvents\n    };\n};\n\nmodule.exports = workTimeTableController;"]}